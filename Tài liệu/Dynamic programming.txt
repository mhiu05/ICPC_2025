1: Cái túi

dp[i][j]: Giá trị khi có i đồ vật nhưng trọng <= j

base: dp[0][j] = 0, mọi j
dp[i][j] = dp[i - 1][j], với j < W[i]
dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - W[i]]), với j >= W[i]

2: Xâu con chung dài nhất

dp[i][j]: Độ dài xâu con chung dài nhất chỉ số i của s1, chỉ số j của s2

base: dp[i][i] = 1, mọi i
Với s1[i - 1] != s2[j - 1]: dp[i][j] = dp[i - 1][j - 1] + 1;
    s1[i - 1] == s2[j - 1]: dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

3: LIS (O(N^2))

L[i]: Độ dài dãy con tăng lớn nhất từ a_1 -> a_i

L[0] = 1
for i:= 1 to n do
    L[i]:=1;
    for j:=1 to i-1 do
        if (A[j]<=A[i]) and (L[i]<L[j]+1) then L[i]:=L[j]+1;

* Cải tiến O(NlogN): LIS + binary search
Code: Contest_ICPC_2025\Contest_1\solution\D.cpp