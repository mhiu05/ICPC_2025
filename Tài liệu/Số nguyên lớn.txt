_______________________
_______________________
* tổng 2 số nguyên lớn:

string add(string a, string b){
    if (a.size() < b.size()) swap(a, b);      
    while (a.size() != b.size()) b = "0" + b;
    int carry = 0;
    string ans = "";
    for (int i = a.size() - 1; i >= 0; --i){
        int x = a[i] - '0' + b[i] - '0' + carry;
        int kq = x % 10;
        carry = x / 10;
        ans = to_string(kq) + ans;
    }
    if (carry != 0) ans = (carry + '0') + ans;
    return ans;
}

_______________________
_______________________
* hiệu 2 số nguyên lớn:

string sub(string a, string b){
    if (a.size() < b.size()) swap(a, b);   
    while (a.size() != b.size()) b = "0" + b;
    if (a < b) swap(a, b);
    int carry = 0;
    string ans = "";
    for (int i = a.size() - 1; i >= 0; --i){
        int x = (a[i] - '0') - (b[i] - '0') - carry;
        if (x < 0){
            carry = 1;
            x += 10;
        }
        else carry = 0;
        ans = to_string(x) + ans;
    }
    return ans;
}

_______________________
_______________________
* tích 2 số nguyên lớn:

string add(string a, string b)
{
    if (a.length() < b.length())
        swap(a, b);
    while (a.length() != b.length())
        b = "0" + b;
    string c;
    int nho = 0;
    for (int i = a.length() - 1; i >= 0; i--)
    {
        int x = a[i] - '0' + b[i] - '0' + nho;
        nho = x / 10;
        int z = x % 10;
        c.push_back(z + '0');
    }
    if (nho > 0)
        c.push_back(nho + '0');
    reverse(c.begin(), c.end());
    return c;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string a, b;
        cin >> a >> b;
        string c;
        vector<string> M(10, "0");
        M[1] = b;
        for (int i = 2; i < 10; i++)
        {
            M[i] = add(M[i - 1], b);
        }
        for (int i = 0; i < a.length(); i++)
        {
            c.push_back('0');
            c = add(c, M[a[i] - '0']);
        }
        cout << c << endl;
    }
}

_______________________
_______________________

* Thương 2 số nguyên lớn:

#include <iostream>
#include <string>
using namespace std;
string mul(string a, string b)
{
    while (a.length() != b.length())
        b.insert(0, "0");
    string c;
    int x;
    for (int i = a.length() - 1; i >= 0; i--)
    {
        if (a[i] >= b[i])
            x = a[i] - b[i];
        else
        {
            x = a[i] - b[i] + 10;
            a[i - 1] -= 1;
        }
        c.push_back(x + '0');
    }
    for (int i = 0; i < c.length() / 2; i++)
        swap(c[i], c[c.length() - i - 1]);
    return c;
}
string add(string a, string b)
{
    if (a.length() < b.length())
        swap(a, b);
    while (a.length() != b.length())
        b.insert(0, "0");
    string c;
    int nho = 0;
    for (int i = a.length() - 1; i >= 0; i--)
    {
        int x = a[i] + b[i] - 96 + nho;
        nho = x / 10;
        int z = x % 10;
        c.push_back(z + '0');
    }
    if (nho > 0)
        c.push_back(nho + '0');
    for (int i = 0; i < c.length() / 2; i++)
        swap(c[i], c[c.length() - i - 1]);
    return c;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string a, b;
        cin >> a >> b;
        int z;
        string c, d = "0", e;
        for (int i = 0; i < a.length(); i++)
        {
            c.push_back(a[i]);
            d.push_back('0');
            int o = 0;
            while ((c.length() == b.length() && c > b) || c.length() > b.length())
            {
                o++;
                c = mul(c, b);
                while (c[0] == '0')
                    c.erase(0, 1);
            }
            string e = "";
            e.push_back(o + '0');
            d = add(d, e);
        }
        if (c == b)
            d = add(d, "1");
        if (a.length() < b.length() || a.length() == b.length() && a < b)
            cout << "0" << endl;
        else
        {
            while (d[0] == '0')
                d.erase(0, 1);
            cout << d << endl;
        }
    }
}